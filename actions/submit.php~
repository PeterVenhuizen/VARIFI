<?php

    header('Content-type: application/json');

    require_once('../assets/config.php');
    include('../assets/functions.php');

    $messages = array(
        'bed' => '',
        'read' => '',
        'email' => '',
        'status' => 'ERROR: Your job has not been submitted! <br> Please check the individual errors and try again.',
        'token' => ''
    );
    $submit = true;

    if ($_SERVER['REQUEST_METHOD'] === 'POST') {

        // Get DB values
        $job_token = generate_token(32);
        $email = mysql_real_escape_string($_POST['email']);
        $institute = mysql_real_escape_string($_POST['institute']);

        if (@is_uploaded_file($_FILES['bed-file']['tmp_name'])) { $bed_file = mysql_real_escape_string($_FILES['bed-file']['name']); } 
        else { $messages['bed'] = 'ERROR: A bed file is required!'; $submit = false; }
        
        if (@is_uploaded_file($_FILES['read-file']['tmp_name'])) { $read_file = mysql_real_escape_string($_FILES['read-file']['name']); }
        else { $messages['read'] = 'ERROR: A read file is required!'; $submit = false; }
        
        $extra_file = (@is_uploaded_file($_FILES['extra-file']['tmp_name']) ? mysql_real_escape_string($_FILES['extra-file']['name']) : '' );
        $ip_addr = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) ? $_SERVER['HTTP_X_FORWARDED_FOR'] : $_SERVER['REMOTE_ADDR'] );

        // Values
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) { $messages['email'] = 'ERROR: Invalid email!'; $submit = false; }

        if ($submit) {

            // Add to submitted_jobs
            $query = 'INSERT INTO submitted_jobs (job_token, email, institute, ip_addr) VALUES (:job_token, :email, :institute, :ip_addr)';
            $query_params = array(':job_token' => $job_token, ':email' => $email, ':institute' => $institute, ':ip_addr' => $ip_addr);
            try {
                $stmt = $db->prepare($query);
                $stmt->execute($query_params);
            } catch (PDOException $ex) { die($messages['status'] .= $ex->getMessage()); }

            // Add to running_jobs
            $query = 'INSERT INTO job_info (job_token, read_file, bed_file, extra_file) VALUES (:job_token, :read_file, :bed_file, :extra_file)';
            $query_params = array(':job_token' => $job_token, ':read_file' => $read_file, ':bed_file' => $bed_file, ':extra_file' => $extra_file);
            try {
                $stmt = $db->prepare($query);
                $stmt->execute($query_params);
            } catch (PDOException $ex) { die($messages['status'] .= $ex->getMessage()); }
            
            // Upload files
            $path = $_SERVER['DOCUMENT_ROOT'] . '/VARIFI/uploads/';

            if (@is_uploaded_file($_FILES['bed-file']['tmp_name'])) {
                if (move_uploaded_file($_FILES['bed-file']['tmp_name'], $path . $_FILES['bed-file']['name'])) {
                    $messages['bed'] = 'Upload successful!';
                } else {
                    $messages['bed'] = 'ERROR: Upload failed!';
                    $messages['status'] = 'ERROR: Job submission failed. Please try again.';
                }
            } else { 
                $messages['bed'] = 'ERROR: Bad request!'; 
                $messages['status'] = 'ERROR: Job submission failed. Please try again.';
            }

            if (@is_uploaded_file($_FILES['read-file']['tmp_name'])) {
                if (move_uploaded_file($_FILES['read-file']['tmp_name'], $path . $_FILES['read-file']['name'])) {
                    $messages['read'] = 'Upload successful!';  
                } else { 
                    $messages['read'] = 'ERROR: Upload failed!'; 
                    $messages['status'] = 'ERROR: Job submission failed. Please try again.';
                }
            } else { 
                $messages['read'] = 'ERROR: Bad request!'; 
                $messages['status'] = 'ERROR: Job submission failed. Please try again.';
            }
            
            // Check if job submission was successful
            if (strpos($messages['status'], 'ERROR') == false) {
                $messages['status'] = 'Job successfully submitted! <br>Estimated running time is between 6-8 hours. Check <a href="job_progress.php?token=' . $job_token . '">this</a> page for your job progress information';
				$messages['token'] = $job_token;
            }
            
        }
    } 

    echo json_encode($messages);
    
?>
